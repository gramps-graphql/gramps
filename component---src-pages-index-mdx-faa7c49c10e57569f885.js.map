{"version":3,"sources":["webpack:///./src/pages/index.mdx"],"names":["name","_frontmatter","PageDescription","props","console","warn","layoutProps","MDXLayout","HomepageTemplate","MDXContent","components","mdxType","parentName","isMDXComponent"],"mappings":"icAMO,IAEeA,EAFTC,EAAe,GAOtBC,GALgBF,EAKgB,kBALR,SAA6BG,GAEzD,OADAC,QAAQC,KAAK,aAAeL,EAAO,2EAC5B,kBAASG,KAIZG,EAAc,CAClBL,gBAEIM,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGP,E,oIACF,mBACD,OAAO,YAACI,EAAD,KAAeD,EAAiBH,EAAhC,CAAuCO,WAAYA,EAAYC,QAAQ,cAG5E,iBAAQ,CACN,GAAM,iHADR,WAEe,gCAFf,SAEgD,+BAFhD,SAEgF,+BAFhF,eAEsH,+BAFtH,UAEuJ,+BAFvJ,UAGA,YAACT,EAAD,CAAiBS,QAAQ,mBACvB,sEAAqD,mBAAGC,WAAW,KAAQ,CACvE,KAAQ,sDADyC,yBAArD,oRAQNH,EAAWI,gBAAiB","file":"component---src-pages-index-mdx-faa7c49c10e57569f885.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport HomepageTemplate from 'gatsby-theme-carbon/src/templates/Homepage';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst PageDescription = makeShortcode(\"PageDescription\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = HomepageTemplate;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h3 {...{\n      \"id\": \"gramps-stronggrstrongaphql-strongastrongpollo-strongmstrongicroservice-strongpstrongattern-strongsstrongerver\"\n    }}>{`GrAMPS (`}<strong>{`Gr`}</strong>{`aphQL `}<strong>{`A`}</strong>{`pollo `}<strong>{`M`}</strong>{`icroservice `}<strong>{`P`}</strong>{`attern `}<strong>{`S`}</strong>{`erver)`}</h3>\n    <PageDescription mdxType=\"PageDescription\">\n      <p>{`A thin layer of helper tools designed for the `}<a parentName=\"p\" {...{\n          \"href\": \"https://www.apollographql.com/docs/apollo-server/\"\n        }}>{`Apollo GraphQL server`}</a>{` that allows independent data sources — a schema, resolvers, and data access model — to be composed into a single GraphQL schema, while keeping the code within each data source isolated, independently testable, and completely decoupled from the rest of your application.`}</p>\n    </PageDescription>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}